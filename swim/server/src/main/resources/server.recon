sattrack: @fabric {
  @plane(class: "swim.sattrack.ApplicationPlane")

  # Aggregation WebAgent
  @node {
    pattern: "/aggregation"
    @agent(class: "swim.sattrack.agents.AggregationAgent")
  }    

  # Satellite WebAgent
  @node {
    # ID should be satellite catalog ID number
    pattern: "/satellite/:id"
    @agent(class: "swim.sattrack.agents.SatelliteAgent") {
      config: {
        swimUrl: "warp://127.0.0.1:9001"
      }
    }
  }    

  # WebAgent to get TLE messages from kafka
  @node {
    pattern: "/bridges/tleMessagesAgent"
    @agent(class: "swim.sattrack.agents.connectors.TleMessagesAgent") {
      config: {
        groupIdConfig: "swim-example",
        servers: "localhost:9092",
        topic: "fullVectorList",
        recordKey: "tleDataset",
        schemaUrl: "http://localhost:8081",
        pollInterval: 1000
      }
    }
  }    

  # Layout WebAgents used for UI only 
  @node {
    pattern: "/layoutManager"
    @agent(class: "swim.sattrack.agents.ui.LayoutsManagerAgent") {
      config: {
        templatesPath: "../ui/templates"
      }    
    }
  }    

  @node {
    pattern: "/layout/:id"
    @agent(class: "swim.sattrack.agents.ui.LayoutAgent")
  }  

}

@web(port: 9001) {
  space: "sattrack"
  documentRoot: "../ui/webRoot"
  @websocket {
    serverCompressionLevel: 0# -1 = default; 0 = off; 1-9 = deflate level
    clientCompressionLevel: 0# -1 = default; 0 = off; 1-9 = deflate level
  }
}